{"version":3,"file":"vega_piechart.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/vega_piechart/index.js"],"sourcesContent":["import vegaEmbed from \"vega-embed\";\n\nexport default async function vegaPiechart(stanza, params) {\n  let spec = await fetch(params[\"src-url\"]).then((res) => res.json());\n  console.log(spec.marks)\n  // spec.data[0].values = [\n  //   {\"id\": 1, \"field\": 1},\n  //   {\"id\": 2, \"field\": 1},\n  //   {\"id\": 3, \"field\": 1},\n  //   {\"id\": 4, \"field\": 5},\n  //   {\"id\": 5, \"field\": 8},\n  //   {\"id\": 6, \"field\": 10}\n  // ]\n\n  // vega.scheme('metastabasic', ['#AB3F61', '#F7EF8D', '#F7749E', '#5CD5F7', '#4895AB', '#4895AB']);\n  // spec.scales[0].range.scheme = 'pastel1';\n  spec.scales[0].range.scheme = params[\"color-scheme\"];\n\n  const el = stanza.root.querySelector(\"main\");\n  const opts = {\n    renderer: \"svg\"\n  };\n  await vegaEmbed(el, spec, opts);\n}"],"names":["vegaEmbed"],"mappings":";;;;;;AAEe,eAAe,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE;AAC3D,EAAE,IAAI,IAAI,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AACtE,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AACvD;AACA,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC/C,EAAE,MAAM,IAAI,GAAG;AACf,IAAI,QAAQ,EAAE,KAAK;AACnB,GAAG,CAAC;AACJ,EAAE,MAAMA,KAAS,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAClC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}