{"version":3,"file":"dev-column-tree-view.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/dev-column-tree-view/index.js"],"sourcesContent":["export default function devColumnTreeView(stanza, params) {\n  const fetchReq = (query, callback, depth) => {\n    const options = {\n      method: \"post\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n      },\n      body: \"query=\" + encodeURIComponent(query),\n    };\n    // set timeout of fetch\n    const fetch_timeout = function (ms, promise) {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          reject(new Error(\"timeout\"));\n        }, ms);\n        promise.then(resolve, reject);\n      });\n    };\n    try {\n      fetch_timeout(120000, fetch(params.endpoint, options))\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return false;\n          }\n        })\n        .then(function (json) {\n          callback(json, depth);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const sparqlQuery = {\n    graph: params.graph || \"\",\n    subclass:\n      params.subclass || \"http://www.w3.org/2000/01/rdf-schema#subClassOf\",\n    label: params.label || \"http://www.w3.org/2000/01/rdf-schema#label\",\n  };\n  if (sparqlQuery.graph) {\n    sparqlQuery.graph = \" FROM <\" + sparqlQuery.graph + \">\";\n  }\n  if (sparqlQuery.subclass.match(/[^\\s]\\s+[^\\s]/)) {\n    const list = [];\n    for (const p of sparqlQuery.subclass.split(/\\s+/)) {\n      if (p.match(/^http/)) {\n        list.push(\"<\" + p + \">\");\n      }\n    }\n    sparqlQuery.subclass = \"(\" + list.join(\"|\") + \")\";\n  } else {\n    sparqlQuery.subclass = \"<\" + sparqlQuery.subclass + \">\";\n  }\n\n  const firstQuery =\n    \"SELECT DISTINCT ?label (SAMPLE (?leafs) AS ?leaf)\" +\n    sparqlQuery.graph +\n    \" WHERE { <\" +\n    params.root +\n    \"> <\" +\n    sparqlQuery.label +\n    \"> ?label . OPTIONAL {?leafs \" +\n    sparqlQuery.subclass +\n    \" ?root . } }\";\n\n  const makeQuery = (uri) => {\n    return (\n      \"SELECT DISTINCT ?parent ?child ?label (SAMPLE (?leafs) AS ?leaf)\" +\n      sparqlQuery.graph +\n      \" WHERE { VALUES ?parent { <\" +\n      uri +\n      \"> } ?child \" +\n      sparqlQuery.subclass +\n      \" ?parent . ?child <\" +\n      sparqlQuery.label +\n      \"> ?label . OPTIONAL {?leafs \" +\n      sparqlQuery.subclass +\n      \" ?child . } } ORDER BY ?label\"\n    );\n  };\n\n  const searchQueryByBifContains = (string) => {\n    const words = string.split(/[^\\w]+/);\n    let query =\n      \"PREFIX bif: <bif:> SELECT DISTINCT ?child ?label_0\" +\n      sparqlQuery.graph +\n      \" WHERE { VALUES ?root { <\" +\n      params.root +\n      \"> } ?child \" +\n      sparqlQuery.subclass +\n      \"* ?root .\";\n    let i = 0;\n    for (const word of words) {\n      if (word.match(/\\w{4}/)) {\n        query += \" ?child <\" + sparqlQuery.label + \"> ?label_\" + i + \" .\";\n        if (params.search === \"2\") {\n          query += \" ?label_\" + i + ' bif:contains \"' + word + '\" .';\n        } else if (params.search === \"3\") {\n          query += \" ?label_\" + i + \" bif:contains \\\"'\" + word + \"*'\\\" .\";\n        } else {\n          query += \" FILTER( REGEX( ?label_\" + i + \", '\" + word + \"', 'i'))\";\n        } // default\n        i++;\n      }\n    }\n    query += \" } ORDER BY ?label\";\n    return query;\n  };\n\n  const getParentsQuery = (uri) => {\n    return (\n      \"SELECT DISTINCT ?parent\" +\n      sparqlQuery.graph +\n      \" WHERE { <\" +\n      uri +\n      \"> \" +\n      sparqlQuery.subclass +\n      \"* ?parent . }\"\n    );\n  };\n\n  const cacheData = {};\n  let renderHash = false;\n  let max = 0;\n\n  const appendElement = (tag, parent) => {\n    const element = document.createElement(tag);\n    parent.appendChild(element);\n    return element;\n  };\n\n  const renderColumn = (json, depth) => {\n    // remove over depth columns\n    if (\n      json.results.bindings[0].parent &&\n      !cacheData[json.results.bindings[0].parent.value]\n    ) {\n      cacheData[json.results.bindings[0].parent.value] = json;\n    }\n    const div = stanza.select(\"#renderDiv\");\n    for (let i = depth; i <= max; i++) {\n      stanza.root.getElementById(\"column_\" + i).remove();\n    }\n    max = depth;\n    // render new column\n    const column = appendElement(\"div\", div);\n    const ul = appendElement(\"ul\", column);\n    column.classList.add(\"column\");\n    column.setAttribute(\"id\", \"column_\" + depth);\n    for (const node of json.results.bindings) {\n      const li = appendElement(\"li\", ul);\n      const label_inline_div = appendElement(\"div\", li);\n      const label_div = appendElement(\"div\", label_inline_div);\n      label_div.classList.add(\"label\");\n      label_div.innerHTML = node.label.value;\n      label_inline_div.classList.add(\"label_inline\");\n      if (node.leaf) {\n        li.classList.add(\"clickable\");\n      } else {\n        li.classList.add(\"clickable_sp\");\n      }\n      li.onclick = function () {\n        for (const child of this.parentNode.childNodes) {\n          child.classList.remove(\"selected\");\n        }\n        this.classList.add(\"selected\");\n        stanza.select(\"#dataInfo\").innerHTML =\n          node.label.value + \"<br>\" + node.child.value;\n        if (node.leaf) {\n          if (cacheData[node.child.value]) {\n            renderColumn(cacheData[node.child.value], depth + 1);\n          } else {\n            fetchReq(makeQuery(node.child.value), renderColumn, depth + 1);\n          }\n        }\n      };\n      if (renderHash && renderHash[node.child.value]) {\n        li.classList.add(\"selected\");\n      }\n    }\n    column.scrollIntoView();\n    if (renderHash) {\n      renderNextFromSearch(json, depth + 1);\n    }\n  };\n\n  const renderFirst = (json, depth) => {\n    stanza.render({\n      template: \"stanza.html.hbs\",\n    });\n    // render first column\n    const column = appendElement(\"div\", stanza.select(\"#renderDiv\"));\n    const ul = appendElement(\"ul\", column);\n    const li = appendElement(\"li\", ul);\n    const label_inline_div = appendElement(\"div\", li);\n    const label_div = appendElement(\"div\", label_inline_div);\n    column.classList.add(\"column\");\n    column.setAttribute(\"id\", \"column_\" + depth);\n    label_div.classList.add(\"label\");\n    label_div.innerHTML = json.results.bindings[0].label.value;\n    label_inline_div.classList.add(\"label_inline\");\n    li.appendChild(label_inline_div);\n    if (json.results.bindings[0].leaf) {\n      li.classList.add(\"clickable\");\n      li.onclick = function () {\n        this.classList.add(\"selected\");\n        stanza.select(\"#dataInfo\").innerHTML =\n          json.results.bindings[0].label.value + \"<br>\" + params.root;\n        fetchReq(makeQuery(params.root), renderColumn, depth + 1);\n      };\n    }\n    // add search action\n    stanza.select(\"#pulldown\").style.top =\n      stanza.select(\"#label_keywords\").offsetTop + 22 + \"px\";\n    stanza.select(\"#pulldown\").style.left =\n      stanza.select(\"#label_keywords\").offsetLeft + \"px\";\n    stanza.select(\"#word_search\").onclick = function () {\n      startSearch();\n    };\n    stanza.select(\"#label_keywords\").onkeydown = function (e) {\n      if (e.key === \"Enter\") {\n        startSearch();\n      }\n    };\n  };\n\n  const renderStartFromSearch = (json) => {\n    renderHash = {};\n    for (const node of json.results.bindings) {\n      renderHash[node.parent.value] = true;\n    }\n    if (cacheData[params.root]) {\n      renderNextFromSearch(cacheData[params.root], 1);\n    } else {\n      fetchReq(makeQuery(params.root), renderColumn, 1);\n    }\n  };\n\n  const renderNextFromSearch = (json, depth) => {\n    let flag = true;\n    for (const node of json.results.bindings) {\n      if (renderHash[node.child.value] && node.leaf) {\n        flag = false;\n        if (cacheData[node.child.value]) {\n          renderColumn(cacheData[node.child.value], depth);\n        } else {\n          fetchReq(makeQuery(node.child.value), renderColumn, depth);\n        }\n        break;\n      }\n    }\n    if (flag) {\n      renderHash = false;\n    }\n  };\n\n  const renderSearchResult = (json) => {\n    clearInterval(searchingTimer);\n    stanza.select(\"#label_keywords\").value = searchString;\n    searchString = false;\n    stanza.select(\"#pulldown\").innerHTML = \"\";\n    const ul = appendElement(\"ul\", stanza.select(\"#pulldown\"));\n    if (json.results.bindings[0]) {\n      for (const res of json.results.bindings) {\n        const li = appendElement(\"li\", ul);\n        li.innerHTML = res.label_0.value;\n        li.onclick = function () {\n          stanza.select(\"#label_keywords\").value = res.label_0.value;\n          stanza.select(\"#pulldown\").style.display = \"none\";\n          stanza.select(\"#dataInfo\").innerHTML =\n            res.label_0.value + \"<br>\" + res.child.value;\n          fetchReq(\n            getParentsQuery(res.child.value),\n            renderStartFromSearch,\n            false\n          );\n        };\n        li.onmouseover = function () {\n          this.style.backgroundColor = \"#cccccc\";\n        };\n        li.onmouseout = function () {\n          this.style.backgroundColor = \"\";\n        };\n      }\n    } else {\n      const li = appendElement(\"li\", ul);\n      li.innerHTML = \"no hit\";\n      li.onclick = function () {\n        stanza.select(\"#pulldown\").style.display = \"none\";\n      };\n    }\n    stanza.select(\"#pulldown\").style.display = \"block\";\n  };\n\n  let searchingTimer;\n  let searchingIndex = 0;\n  let searchString = false;\n  const searching = () => {\n    searchingIndex = (searchingIndex + 1) % 2;\n    if (searchingIndex) {\n      stanza.select(\"#label_keywords\").value = searchString + \" ...\";\n    } else {\n      stanza.select(\"#label_keywords\").value = searchString;\n    }\n  };\n\n  const startSearch = () => {\n    const string = stanza.select(\"#label_keywords\").value;\n    if (string.match(/\\w{3}/) && !searchString) {\n      stanza.select(\"#pulldown\").style.display = \"none\";\n      searchString = string;\n      searchingTimer = setInterval(searching, 500);\n      fetchReq(searchQueryByBifContains(string), renderSearchResult, false);\n    }\n  };\n\n  fetchReq(firstQuery, renderFirst, 0);\n}\n"],"names":[],"mappings":"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"}