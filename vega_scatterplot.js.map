{"version":3,"file":"vega_scatterplot.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/vega_scatterplot/index.js"],"sourcesContent":["import vegaEmbed from \"vega-embed\";\n\nexport default function vegaScatterplot(stanza, params) {\n  // let spec = await fetch(params[\"src-url\"]).then((res) => res.json());\n  let spec = {\n    \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n    \"description\": \"A basic scatter plot example depicting automobile statistics.\",\n    \"width\": 200,\n    \"height\": 200,\n    \"padding\": 5,\n  \n    \"data\": [\n      {\n        \"name\": \"source\",\n        \"url\": \"data/cars.json\",\n        \"transform\": [\n          {\n            \"type\": \"filter\",\n            \"expr\": \"datum['Horsepower'] != null && datum['Miles_per_Gallon'] != null && datum['Acceleration'] != null\"\n          }\n        ]\n      }\n    ],\n  \n    \"scales\": [\n      {\n        \"name\": \"x\",\n        \"type\": \"linear\",\n        \"round\": true,\n        \"nice\": true,\n        \"zero\": true,\n        \"domain\": {\"data\": \"source\", \"field\": \"Horsepower\"},\n        \"range\": \"width\"\n      },\n      {\n        \"name\": \"y\",\n        \"type\": \"linear\",\n        \"round\": true,\n        \"nice\": true,\n        \"zero\": true,\n        \"domain\": {\"data\": \"source\", \"field\": \"Miles_per_Gallon\"},\n        \"range\": \"height\"\n      },\n      {\n        \"name\": \"size\",\n        \"type\": \"linear\",\n        \"round\": true,\n        \"nice\": false,\n        \"zero\": true,\n        \"domain\": {\"data\": \"source\", \"field\": \"Acceleration\"},\n        \"range\": [4,361]\n      }\n    ],\n  \n    \"axes\": [\n      {\n        \"scale\": \"x\",\n        \"grid\": true,\n        \"domain\": false,\n        \"orient\": \"bottom\",\n        \"tickCount\": 5,\n        \"title\": \"Horsepower\"\n      },\n      {\n        \"scale\": \"y\",\n        \"grid\": true,\n        \"domain\": false,\n        \"orient\": \"left\",\n        \"titlePadding\": 5,\n        \"title\": \"Miles_per_Gallon\"\n      }\n    ],\n  \n    \"legends\": [\n      {\n        \"size\": \"size\",\n        \"title\": \"Acceleration\",\n        \"format\": \"s\",\n        \"symbolStrokeColor\": \"#4682b4\",\n        \"symbolStrokeWidth\": 2,\n        \"symbolOpacity\": 0.5,\n        \"symbolType\": \"circle\"\n      }\n    ],\n  \n    \"marks\": [\n      {\n        \"name\": \"marks\",\n        \"type\": \"symbol\",\n        \"from\": {\"data\": \"source\"},\n        \"encode\": {\n          \"update\": {\n            \"x\": {\"scale\": \"x\", \"field\": \"Horsepower\"},\n            \"y\": {\"scale\": \"y\", \"field\": \"Miles_per_Gallon\"},\n            \"size\": {\"scale\": \"size\", \"field\": \"Acceleration\"},\n            \"shape\": {\"value\": \"circle\"},\n            \"strokeWidth\": {\"value\": 2},\n            \"opacity\": {\"value\": 0.5},\n            \"stroke\": {\"value\": \"#4682b4\"},\n            \"fill\": {\"value\": \"transparent\"}\n          }\n        }\n      }\n    ]\n  };\n\n  console.log(spec)\n\n  // spec.data[0].values = fetch('https://vega.github.io/vega-lite/data/cars.json').then((res) => res.json());\n  // spec.data[0].url = 'https://vega.github.io/vega-lite/data/cars.json'\n  spec.data[0].url = params[\"your-data\"]\n\n  spec.axes[0].title = params[\"xaxes-title\"]\n  spec.axes[1].title = params[\"yaxes-title\"]\n  \n  spec.legends[0].title = params[\"legends-title\"]\n  spec.legends[0].symbolOpacity = \"var(--opacity)\"\n  spec.legends[0].symbolStrokeColor = \"var(--plot-frame-color)\"\n  // spec.legends[0].symbolStrokeWidth = \"var(--stroke-width)\"\n  // spec.legends[0].symbolType = [\"symbol-type\"]\n\n  spec.marks[0].encode.update.fill.value = \"var(--plot-color)\"\n  spec.marks[0].encode.update.stroke.value = \"var(--plot-frame-color)\"\n  spec.marks[0].encode.update.opacity.value = \"var(--opacity)\"\n  spec.marks[0].encode.update.strokeWidth.value = \"var(--stroke-width)\"\n  // spec.marks[0].encode.update.shape.value = [\"symbol-type\"]\n  spec.marks[0].encode.update.shape.value = params[\"--symbol-type\"]\n\n\n  const el = stanza.root.querySelector(\"main\");\n  const opts = {\n    renderer: \"svg\"\n  };\n  vegaEmbed(el, spec, opts);\n}"],"names":["vegaEmbed"],"mappings":";;;;;;AAEe,SAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE;AACxD;AACA,EAAE,IAAI,IAAI,GAAG;AACb,IAAI,SAAS,EAAE,4CAA4C;AAC3D,IAAI,aAAa,EAAE,+DAA+D;AAClF,IAAI,OAAO,EAAE,GAAG;AAChB,IAAI,QAAQ,EAAE,GAAG;AACjB,IAAI,SAAS,EAAE,CAAC;AAChB;AACA,IAAI,MAAM,EAAE;AACZ,MAAM;AACN,QAAQ,MAAM,EAAE,QAAQ;AACxB,QAAQ,KAAK,EAAE,gBAAgB;AAC/B,QAAQ,WAAW,EAAE;AACrB,UAAU;AACV,YAAY,MAAM,EAAE,QAAQ;AAC5B,YAAY,MAAM,EAAE,mGAAmG;AACvH,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,QAAQ,EAAE;AACd,MAAM;AACN,QAAQ,MAAM,EAAE,GAAG;AACnB,QAAQ,MAAM,EAAE,QAAQ;AACxB,QAAQ,OAAO,EAAE,IAAI;AACrB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC;AAC3D,QAAQ,OAAO,EAAE,OAAO;AACxB,OAAO;AACP,MAAM;AACN,QAAQ,MAAM,EAAE,GAAG;AACnB,QAAQ,MAAM,EAAE,QAAQ;AACxB,QAAQ,OAAO,EAAE,IAAI;AACrB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,kBAAkB,CAAC;AACjE,QAAQ,OAAO,EAAE,QAAQ;AACzB,OAAO;AACP,MAAM;AACN,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,MAAM,EAAE,QAAQ;AACxB,QAAQ,OAAO,EAAE,IAAI;AACrB,QAAQ,MAAM,EAAE,KAAK;AACrB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC;AAC7D,QAAQ,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;AACxB,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,EAAE;AACZ,MAAM;AACN,QAAQ,OAAO,EAAE,GAAG;AACpB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,QAAQ,EAAE,KAAK;AACvB,QAAQ,QAAQ,EAAE,QAAQ;AAC1B,QAAQ,WAAW,EAAE,CAAC;AACtB,QAAQ,OAAO,EAAE,YAAY;AAC7B,OAAO;AACP,MAAM;AACN,QAAQ,OAAO,EAAE,GAAG;AACpB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,QAAQ,EAAE,KAAK;AACvB,QAAQ,QAAQ,EAAE,MAAM;AACxB,QAAQ,cAAc,EAAE,CAAC;AACzB,QAAQ,OAAO,EAAE,kBAAkB;AACnC,OAAO;AACP,KAAK;AACL;AACA,IAAI,SAAS,EAAE;AACf,MAAM;AACN,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,OAAO,EAAE,cAAc;AAC/B,QAAQ,QAAQ,EAAE,GAAG;AACrB,QAAQ,mBAAmB,EAAE,SAAS;AACtC,QAAQ,mBAAmB,EAAE,CAAC;AAC9B,QAAQ,eAAe,EAAE,GAAG;AAC5B,QAAQ,YAAY,EAAE,QAAQ;AAC9B,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,EAAE;AACb,MAAM;AACN,QAAQ,MAAM,EAAE,OAAO;AACvB,QAAQ,MAAM,EAAE,QAAQ;AACxB,QAAQ,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;AAClC,QAAQ,QAAQ,EAAE;AAClB,UAAU,QAAQ,EAAE;AACpB,YAAY,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,CAAC;AACtD,YAAY,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,kBAAkB,CAAC;AAC5D,YAAY,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,CAAC;AAC9D,YAAY,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;AACxC,YAAY,aAAa,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;AACvC,YAAY,SAAS,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC;AACrC,YAAY,QAAQ,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC;AAC1C,YAAY,MAAM,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC;AAC5C,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC;AACnB;AACA;AACA;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,EAAC;AACxC;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,aAAa,EAAC;AAC5C,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,aAAa,EAAC;AAC5C;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,eAAe,EAAC;AACjD,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,iBAAgB;AAClD,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,0BAAyB;AAC/D;AACA;AACA;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,oBAAmB;AAC9D,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,0BAAyB;AACtE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,iBAAgB;AAC9D,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,sBAAqB;AACvE;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,eAAe,EAAC;AACnE;AACA;AACA,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC/C,EAAE,MAAM,IAAI,GAAG;AACf,IAAI,QAAQ,EAAE,KAAK;AACnB,GAAG,CAAC;AACJ,EAAEA,KAAS,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}