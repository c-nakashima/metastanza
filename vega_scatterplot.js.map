{"version":3,"file":"vega_scatterplot.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/vega_scatterplot/index.js"],"sourcesContent":["import vegaEmbed from \"vega-embed\";\n\nexport default async function vegaScatterplot(stanza, params) {\n  let spec = await fetch(params[\"src-url\"]).then((res) => res.json());\n  spec.data[0].url = params[\"your-data\"]\n\n  //stanza（描画範囲）のwidth・height\n  spec.width = params[\"width\"]; \n  spec.height = params[\"height\"];\n  \n  //stanzaのpadding\n  spec.padding = params[\"padding\"];\n\n  //スケールに関する設定\n  spec.scales[0].paddingInner = params[\"padding-inner\"]\n  spec.scales[0].paddingOuter = params[\"padding-outer\"]\n\n  //軸に関する設定\n  spec.axes =[\n    {\n      \"scale\": \"x\",\n      \"grid\": params[\"xgrid\"],\n      \"domain\": false,\n      \"orient\": params[\"orient-of-xscale\"],\n      \"tickCount\": 5,\n      \"title\": params[\"title-of-xaxis\"],\n      \"encode\": {\n          \"ticks\": {\n            \"update\": {\n            \"stroke\": {\"value\": params[\"tick-color\"]}\n            }\n          },\n          \"labels\": {\n            \"interactive\": true,\n            \"update\": {\n              \"fill\": {\"value\": params[\"label-color\"]},\n              \"fontSize\": {\"value\": params[\"label-size\"]},\n            },\n            \"hover\": {\n              \"fill\": {\"value\": \"var(--emphasized-color)\"}\n            }\n          },\n          \"title\": {\n            \"update\": {\n              \"fontSize\": {\"value\": params[\"title-size\"]}\n            }\n          },\n          \"domain\": {\n            \"update\": {\n              \"stroke\": {\"value\": params[\"axis-color\"]},\n              \"strokeWidth\": {\"value\": params[\"axis-width\"]}\n            }\n          }\n        }\n    },\n    {\n      \"scale\": \"y\",\n      \"grid\": params[\"ygrid\"],\n      \"domain\": false,\n      \"orient\": params[\"orient-of-yscale\"],\n      \"titlePadding\": 5,\n      \"title\": params[\"title-of-yaxis\"],\n      \"encode\": {\n        \"ticks\": {\n          \"update\": {\n          \"stroke\": {\"value\": params[\"tick-color\"]}\n          }\n        },\n        \"labels\": {\n          \"interactive\": true,\n          \"update\": {\n            \"fill\": {\"value\": params[\"label-color\"]},\n            \"fontSize\": {\"value\": params[\"label-size\"]},\n          },\n          \"hover\": {\n            \"fill\": {\"value\": \"var(--emphasized-color)\"}\n          }\n        },\n        \"title\": {\n          \"update\": {\n            \"fontSize\": {\"value\": params[\"title-size\"]}\n          }\n        },\n        \"domain\": {\n          \"update\": {\n            \"stroke\": {\"value\": params[\"axis-color\"]},\n            \"strokeWidth\": {\"value\": params[\"axis-width\"]}\n          }\n        }\n      }\n    }\n  ]\n\n  spec.legends = [\n    {\n      \"size\": \"size\",\n      \"title\": params[\"title-of-legend\"],\n      \"format\": \"s\",\n      \"symbolStrokeColor\": params[\"stroke-color\"],\n      \"symbolStrokeWidth\": params[\"stroke-width\"],\n      \"symbolOpacity\": params[\"opacity\"],\n      \"symbolType\": params[\"symbol-type\"],\n      \"symbolFillColor\": {\"value\": \"var(--basic-fill-color)\"}\n    }\n  ]\n\n  spec.marks= [\n    {\n    \"name\": \"marks\",\n    \"type\": \"symbol\",\n    \"from\": {\"data\": \"source\"},\n    \"encode\": {\n      \"update\": {\n        \"x\": {\"scale\": \"x\", \"field\": \"Horsepower\"},\n        \"y\": {\"scale\": \"y\", \"field\": \"Miles_per_Gallon\"},\n        \"size\": {\"scale\": \"size\", \"field\": \"Acceleration\"},\n        \"shape\": {\"value\": params[\"symbol-type\"]},\n        \"strokeWidth\": {\"value\": params[\"stroke-width\"]},\n        \"opacity\": {\"value\": params[\"opacity\"]},\n        \"stroke\": {\"value\": params[\"stroke-color\"]},\n        \"fill\": {\"value\": \"var(--basic-fill-color)\"}\n      },\n      \"hover\": {\n        \"fill\": {\"value\": \"var(--emphasized-color)\"},\n      }\n      }\n    }\n  ]\n\n  // spec.axes[0].encode = {\n  //   \"ticks\": {\n  //     \"update\": {\n  //     \"stroke\": {\"value\": params[\"tick-color\"]}\n  //     }\n  //   },\n  //   \"labels\": {\n  //     \"interactive\": true,\n  //     \"update\": {\n  //       \"fill\": {\"value\": params[\"label-color\"]},\n  //       \"fontSize\": {\"value\": params[\"label-size\"]},\n  //     },\n  //     \"hover\": {\n  //       \"fill\": {\"value\": \"var(--emphasized-color)\"}\n  //     }\n  //   },\n  //   \"title\": {\n  //     \"update\": {\n  //       \"fontSize\": {\"value\": params[\"title-size\"]}\n  //     }\n  //   },\n  //   \"domain\": {\n  //     \"update\": {\n  //       \"stroke\": {\"value\": params[\"axis-color\"]},\n  //       \"strokeWidth\": {\"value\": params[\"axis-width\"]}\n  //     }\n  //   }\n  // }\n\n  // spec.axes[1].encode = {\n  //   \"ticks\": {\n  //     \"update\": {\n  //     \"stroke\": {\"value\": params[\"tick-color\"]}\n  //     }\n  //   },\n  //   \"labels\": {\n  //     \"interactive\": true,\n  //     \"update\": {\n  //       \"fill\": {\"value\": params[\"label-color\"]},\n  //       \"fontSize\": {\"value\": params[\"label-size\"]},\n  //     },\n  //     \"hover\": {\n  //       \"fill\": {\"value\": \"var(--emphasized-color)\"}\n  //     }\n  //   },\n  //   \"title\": {\n  //     \"update\": {\n  //       \"fontSize\": {\"value\": params[\"title-size\"]}\n  //     }\n  //   },\n  //   \"domain\": {\n  //     \"update\": {\n  //       \"stroke\": {\"value\": params[\"axis-color\"]},\n  //       \"strokeWidth\": {\"value\": params[\"axis-width\"]}\n  //     }\n  //   }\n  // }\n\n//   spec.axes[0].title = params[\"xaxes-title\"]\n//   spec.axes[1].title = params[\"yaxes-title\"]\n  \n//   spec.legends[0].title = params[\"legends-title\"]\n//   spec.legends[0].symbolOpacity = \"var(--opacity)\"\n//   spec.legends[0].symbolStrokeColor = \"var(--plot-frame-color)\"\n//   // spec.legends[0].symbolStrokeWidth = \"var(--stroke-width)\"\n//   // spec.legends[0].symbolType = [\"symbol-type\"]\n\n//   spec.marks[0].encode.update.fill.value = \"var(--plot-color)\"\n//   spec.marks[0].encode.update.stroke.value = \"var(--plot-frame-color)\"\n//   spec.marks[0].encode.update.opacity.value = \"var(--opacity)\"\n//   spec.marks[0].encode.update.strokeWidth.value = \"var(--stroke-width)\"\n//   // spec.marks[0].encode.update.shape.value = [\"symbol-type\"]\n//   spec.marks[0].encode.update.shape.value = params[\"--symbol-type\"]\n\n  const el = stanza.root.querySelector(\"main\");\n  const opts = {\n    renderer: \"svg\"\n  };\n  await vegaEmbed(el, spec, opts);\n}\n\n\n// import vegaEmbed from \"vega-embed\";\n\n// export default function vegaScatterplot(stanza, params) {\n//   // let spec = await fetch(params[\"src-url\"]).then((res) => res.json());\n//   let spec = {\n//     \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n//     \"description\": \"A basic scatter plot example depicting automobile statistics.\",\n//     \"width\": 200,\n//     \"height\": 200,\n//     \"padding\": 5,\n  \n//     \"data\": [\n//       {\n//         \"name\": \"source\",\n//         \"url\": \"data/cars.json\",\n//         \"transform\": [\n//           {\n//             \"type\": \"filter\",\n//             \"expr\": \"datum['Horsepower'] != null && datum['Miles_per_Gallon'] != null && datum['Acceleration'] != null\"\n//           }\n//         ]\n//       }\n//     ],\n  \n//     \"scales\": [\n//       {\n//         \"name\": \"x\",\n//         \"type\": \"linear\",\n//         \"round\": true,\n//         \"nice\": true,\n//         \"zero\": true,\n//         \"domain\": {\"data\": \"source\", \"field\": \"Horsepower\"},\n//         \"range\": \"width\"\n//       },\n//       {\n//         \"name\": \"y\",\n//         \"type\": \"linear\",\n//         \"round\": true,\n//         \"nice\": true,\n//         \"zero\": true,\n//         \"domain\": {\"data\": \"source\", \"field\": \"Miles_per_Gallon\"},\n//         \"range\": \"height\"\n//       },\n//       {\n//         \"name\": \"size\",\n//         \"type\": \"linear\",\n//         \"round\": true,\n//         \"nice\": false,\n//         \"zero\": true,\n//         \"domain\": {\"data\": \"source\", \"field\": \"Acceleration\"},\n//         \"range\": [4,361]\n//       }\n//     ],\n  \n//     \"axes\": [\n//       {\n//         \"scale\": \"x\",\n//         \"grid\": true,\n//         \"domain\": false,\n//         \"orient\": \"bottom\",\n//         \"tickCount\": 5,\n//         \"title\": \"Horsepower\"\n//       },\n//       {\n//         \"scale\": \"y\",\n//         \"grid\": true,\n//         \"domain\": false,\n//         \"orient\": \"left\",\n//         \"titlePadding\": 5,\n//         \"title\": \"Miles_per_Gallon\"\n//       }\n//     ],\n  \n//     \"legends\": [\n//       {\n//         \"size\": \"size\",\n//         \"title\": \"Acceleration\",\n//         \"format\": \"s\",\n//         \"symbolStrokeColor\": \"#4682b4\",\n//         \"symbolStrokeWidth\": 2,\n//         \"symbolOpacity\": 0.5,\n//         \"symbolType\": \"circle\"\n//       }\n//     ],\n  \n//     \"marks\": [\n//       {\n//         \"name\": \"marks\",\n//         \"type\": \"symbol\",\n//         \"from\": {\"data\": \"source\"},\n//         \"encode\": {\n//           \"update\": {\n//             \"x\": {\"scale\": \"x\", \"field\": \"Horsepower\"},\n//             \"y\": {\"scale\": \"y\", \"field\": \"Miles_per_Gallon\"},\n//             \"size\": {\"scale\": \"size\", \"field\": \"Acceleration\"},\n//             \"shape\": {\"value\": \"circle\"},\n//             \"strokeWidth\": {\"value\": 2},\n//             \"opacity\": {\"value\": 0.5},\n//             \"stroke\": {\"value\": \"#4682b4\"},\n//             \"fill\": {\"value\": \"transparent\"}\n//           }\n//         }\n//       }\n//     ]\n//   };\n\n//   console.log(spec)\n\n//   // spec.data[0].values = fetch('https://vega.github.io/vega-lite/data/cars.json').then((res) => res.json());\n//   // spec.data[0].url = 'https://vega.github.io/vega-lite/data/cars.json'\n//   spec.data[0].url = params[\"your-data\"]\n\n//   spec.axes[0].title = params[\"xaxes-title\"]\n//   spec.axes[1].title = params[\"yaxes-title\"]\n  \n//   spec.legends[0].title = params[\"legends-title\"]\n//   spec.legends[0].symbolOpacity = \"var(--opacity)\"\n//   spec.legends[0].symbolStrokeColor = \"var(--plot-frame-color)\"\n//   // spec.legends[0].symbolStrokeWidth = \"var(--stroke-width)\"\n//   // spec.legends[0].symbolType = [\"symbol-type\"]\n\n//   spec.marks[0].encode.update.fill.value = \"var(--plot-color)\"\n//   spec.marks[0].encode.update.stroke.value = \"var(--plot-frame-color)\"\n//   spec.marks[0].encode.update.opacity.value = \"var(--opacity)\"\n//   spec.marks[0].encode.update.strokeWidth.value = \"var(--stroke-width)\"\n//   // spec.marks[0].encode.update.shape.value = [\"symbol-type\"]\n//   spec.marks[0].encode.update.shape.value = params[\"--symbol-type\"]\n\n\n//   const el = stanza.root.querySelector(\"main\");\n//   const opts = {\n//     renderer: \"svg\"\n//   };\n//   vegaEmbed(el, spec, opts);\n// }"],"names":["vegaEmbed"],"mappings":"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CAAC;AACnD,QAAQ,MAAM,EAAE,CAAC,OAAO,EAAE,yBAAyB,CAAC;AACpD,OAAO;AACP,MAAM,OAAO,EAAE;AACf,QAAQ,MAAM,EAAE,CAAC,OAAO,EAAE,yBAAyB,CAAC;AACpD,OAAO;AACP,OAAO;AACP,KAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC/C,EAAE,MAAM,IAAI,GAAG;AACf,IAAI,QAAQ,EAAE,KAAK;AACnB,GAAG,CAAC;AACJ,EAAE,MAAMA,KAAS,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACl}